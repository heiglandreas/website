<?php 
/**
 * Website Zend\Together
 *
 * @package    Application
 * @author     Ralf Eggert <r.eggert@travello.de>
 * * @link       http://www.zf-together.com
 */

/**
 * Listing 22.14 view script
 * 
 * @package    Application
 */

$this->headTitle('Listing 22.14');
$this->pageTitle('Listing 22.14');
?>
<h3><code>BasketController</code> zur Bearbeitung eines Warenkorbs</h3>
<pre>
&lt;?php
namespace Shop\Controller;

use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\ViewModel;
use Shop\Service\BasketServiceInterface;

class BasketController extends AbstractActionController
{
    protected $basketService;
    
    public function setBasketService(BasketServiceInterface $basketService)
    {
        $this->basketService = $basketService;

        return $this;
    }
    
    public function getBasketService()
    {
        return $this->basketService;
    }
    
    public function indexAction()
    {
        return new ViewModel(array(
            'basket' => $this->getBasketService()->getBasket(),
        ));
    }
    
    public function removeAction()
    {
        $id = $this->params()->fromRoute('id');
    
        $basket = $this->getBasketService()->getBasket();
        
        $position = $basket->getPosition($id);
        
        if ($position) {
            $this->getBasketService()->remove($position->getEntity());
        }
    
        return $this->redirect()->toRoute('shop/basket');
    }

    public function increaseAction()
    {
        $id = $this->params()->fromRoute('id');
    
        $basket = $this->getBasketService()->getBasket();
        
        $position = $basket->getPosition($id);
        
        if ($position) {
            $position->addQuantity(1);
        }
    
        return $this->redirect()->toRoute('shop/basket');
    }

    public function decreaseAction()
    {
        $id = $this->params()->fromRoute('id');
    
        $basket = $this->getBasketService()->getBasket();
    
        $position = $basket->getPosition($id);
    
        if ($position) {
            $position->subQuantity(1);
        }
    
        return $this->redirect()->toRoute('shop/basket');
    }
}
</pre>
